# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc
import warnings

from . import user_pb2 as forge_dot_v1_dot_user__pb2
from google.protobuf import empty_pb2 as google_dot_protobuf_dot_empty__pb2

GRPC_GENERATED_VERSION = '1.75.0'
GRPC_VERSION = grpc.__version__
_version_not_supported = False

try:
    from grpc._utilities import first_version_is_lower
    _version_not_supported = first_version_is_lower(GRPC_VERSION, GRPC_GENERATED_VERSION)
except ImportError:
    _version_not_supported = True

if _version_not_supported:
    raise RuntimeError(
        f'The grpc package installed is at version {GRPC_VERSION},'
        + f' but the generated code in forge/v1/user_pb2_grpc.py depends on'
        + f' grpcio>={GRPC_GENERATED_VERSION}.'
        + f' Please upgrade your grpc module to grpcio>={GRPC_GENERATED_VERSION}'
        + f' or downgrade your generated code using grpcio-tools<={GRPC_VERSION}.'
    )


class UserServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.Register = channel.unary_unary(
                '/forge.v1.UserService/Register',
                request_serializer=forge_dot_v1_dot_user__pb2.RegisterRequest.SerializeToString,
                response_deserializer=forge_dot_v1_dot_user__pb2.UserReply.FromString,
                _registered_method=True)
        self.Login = channel.unary_unary(
                '/forge.v1.UserService/Login',
                request_serializer=forge_dot_v1_dot_user__pb2.LoginRequest.SerializeToString,
                response_deserializer=forge_dot_v1_dot_user__pb2.LoginReply.FromString,
                _registered_method=True)
        self.Refresh = channel.unary_unary(
                '/forge.v1.UserService/Refresh',
                request_serializer=forge_dot_v1_dot_user__pb2.RefreshRequest.SerializeToString,
                response_deserializer=forge_dot_v1_dot_user__pb2.LoginReply.FromString,
                _registered_method=True)
        self.GetUser = channel.unary_unary(
                '/forge.v1.UserService/GetUser',
                request_serializer=forge_dot_v1_dot_user__pb2.GetUserRequest.SerializeToString,
                response_deserializer=forge_dot_v1_dot_user__pb2.UserReply.FromString,
                _registered_method=True)
        self.ListUsers = channel.unary_unary(
                '/forge.v1.UserService/ListUsers',
                request_serializer=forge_dot_v1_dot_user__pb2.ListUsersRequest.SerializeToString,
                response_deserializer=forge_dot_v1_dot_user__pb2.ListUsersReply.FromString,
                _registered_method=True)
        self.UpdateUser = channel.unary_unary(
                '/forge.v1.UserService/UpdateUser',
                request_serializer=forge_dot_v1_dot_user__pb2.UpdateUserRequest.SerializeToString,
                response_deserializer=forge_dot_v1_dot_user__pb2.UserReply.FromString,
                _registered_method=True)
        self.ChangePassword = channel.unary_unary(
                '/forge.v1.UserService/ChangePassword',
                request_serializer=forge_dot_v1_dot_user__pb2.ChangePasswordRequest.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                _registered_method=True)
        self.ActivateUser = channel.unary_unary(
                '/forge.v1.UserService/ActivateUser',
                request_serializer=forge_dot_v1_dot_user__pb2.UserIdRequest.SerializeToString,
                response_deserializer=forge_dot_v1_dot_user__pb2.UserReply.FromString,
                _registered_method=True)
        self.DeactivateUser = channel.unary_unary(
                '/forge.v1.UserService/DeactivateUser',
                request_serializer=forge_dot_v1_dot_user__pb2.UserIdRequest.SerializeToString,
                response_deserializer=forge_dot_v1_dot_user__pb2.UserReply.FromString,
                _registered_method=True)
        self.DeleteUser = channel.unary_unary(
                '/forge.v1.UserService/DeleteUser',
                request_serializer=forge_dot_v1_dot_user__pb2.UserIdRequest.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                _registered_method=True)


class UserServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def Register(self, request, context):
        """Anonymous
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Login(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Refresh(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetUser(self, request, context):
        """Authenticated
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListUsers(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateUser(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ChangePassword(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ActivateUser(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeactivateUser(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteUser(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_UserServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'Register': grpc.unary_unary_rpc_method_handler(
                    servicer.Register,
                    request_deserializer=forge_dot_v1_dot_user__pb2.RegisterRequest.FromString,
                    response_serializer=forge_dot_v1_dot_user__pb2.UserReply.SerializeToString,
            ),
            'Login': grpc.unary_unary_rpc_method_handler(
                    servicer.Login,
                    request_deserializer=forge_dot_v1_dot_user__pb2.LoginRequest.FromString,
                    response_serializer=forge_dot_v1_dot_user__pb2.LoginReply.SerializeToString,
            ),
            'Refresh': grpc.unary_unary_rpc_method_handler(
                    servicer.Refresh,
                    request_deserializer=forge_dot_v1_dot_user__pb2.RefreshRequest.FromString,
                    response_serializer=forge_dot_v1_dot_user__pb2.LoginReply.SerializeToString,
            ),
            'GetUser': grpc.unary_unary_rpc_method_handler(
                    servicer.GetUser,
                    request_deserializer=forge_dot_v1_dot_user__pb2.GetUserRequest.FromString,
                    response_serializer=forge_dot_v1_dot_user__pb2.UserReply.SerializeToString,
            ),
            'ListUsers': grpc.unary_unary_rpc_method_handler(
                    servicer.ListUsers,
                    request_deserializer=forge_dot_v1_dot_user__pb2.ListUsersRequest.FromString,
                    response_serializer=forge_dot_v1_dot_user__pb2.ListUsersReply.SerializeToString,
            ),
            'UpdateUser': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateUser,
                    request_deserializer=forge_dot_v1_dot_user__pb2.UpdateUserRequest.FromString,
                    response_serializer=forge_dot_v1_dot_user__pb2.UserReply.SerializeToString,
            ),
            'ChangePassword': grpc.unary_unary_rpc_method_handler(
                    servicer.ChangePassword,
                    request_deserializer=forge_dot_v1_dot_user__pb2.ChangePasswordRequest.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'ActivateUser': grpc.unary_unary_rpc_method_handler(
                    servicer.ActivateUser,
                    request_deserializer=forge_dot_v1_dot_user__pb2.UserIdRequest.FromString,
                    response_serializer=forge_dot_v1_dot_user__pb2.UserReply.SerializeToString,
            ),
            'DeactivateUser': grpc.unary_unary_rpc_method_handler(
                    servicer.DeactivateUser,
                    request_deserializer=forge_dot_v1_dot_user__pb2.UserIdRequest.FromString,
                    response_serializer=forge_dot_v1_dot_user__pb2.UserReply.SerializeToString,
            ),
            'DeleteUser': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteUser,
                    request_deserializer=forge_dot_v1_dot_user__pb2.UserIdRequest.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'forge.v1.UserService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('forge.v1.UserService', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class UserService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def Register(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/forge.v1.UserService/Register',
            forge_dot_v1_dot_user__pb2.RegisterRequest.SerializeToString,
            forge_dot_v1_dot_user__pb2.UserReply.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def Login(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/forge.v1.UserService/Login',
            forge_dot_v1_dot_user__pb2.LoginRequest.SerializeToString,
            forge_dot_v1_dot_user__pb2.LoginReply.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def Refresh(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/forge.v1.UserService/Refresh',
            forge_dot_v1_dot_user__pb2.RefreshRequest.SerializeToString,
            forge_dot_v1_dot_user__pb2.LoginReply.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetUser(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/forge.v1.UserService/GetUser',
            forge_dot_v1_dot_user__pb2.GetUserRequest.SerializeToString,
            forge_dot_v1_dot_user__pb2.UserReply.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ListUsers(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/forge.v1.UserService/ListUsers',
            forge_dot_v1_dot_user__pb2.ListUsersRequest.SerializeToString,
            forge_dot_v1_dot_user__pb2.ListUsersReply.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def UpdateUser(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/forge.v1.UserService/UpdateUser',
            forge_dot_v1_dot_user__pb2.UpdateUserRequest.SerializeToString,
            forge_dot_v1_dot_user__pb2.UserReply.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ChangePassword(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/forge.v1.UserService/ChangePassword',
            forge_dot_v1_dot_user__pb2.ChangePasswordRequest.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ActivateUser(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/forge.v1.UserService/ActivateUser',
            forge_dot_v1_dot_user__pb2.UserIdRequest.SerializeToString,
            forge_dot_v1_dot_user__pb2.UserReply.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def DeactivateUser(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/forge.v1.UserService/DeactivateUser',
            forge_dot_v1_dot_user__pb2.UserIdRequest.SerializeToString,
            forge_dot_v1_dot_user__pb2.UserReply.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def DeleteUser(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/forge.v1.UserService/DeleteUser',
            forge_dot_v1_dot_user__pb2.UserIdRequest.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)
