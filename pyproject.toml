[tool.black]
line-length = 100
target-version = ['py311']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
  | alembic/versions
  | grpc_app/generated
)/
'''

[tool.isort]
profile = "black"
line_length = 100
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
skip_glob = ["alembic/versions/*", "grpc_app/generated/*"]
known_first_party = ["api", "application", "domain", "infrastructure", "core", "shared"]
sections = ["FUTURE", "STDLIB", "THIRDPARTY", "FIRSTPARTY", "LOCALFOLDER"]

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = false
disallow_incomplete_defs = false
check_untyped_defs = true
disallow_untyped_decorators = false
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
follow_imports = "normal"
ignore_missing_imports = true
strict_optional = false
exclude = [
    "alembic/versions/.*\\.py$",
    "grpc_app/generated/.*\\.py$",
]

[[tool.mypy.overrides]]
module = [
    "celery.*",
    "confluent_kafka.*",
    "aiokafka.*",
    "oss2.*",
    "boto3.*",
    "stripe.*",
    "wechatpayv3.*",
]
ignore_missing_imports = true

[tool.pytest.ini_options]
minversion = "7.0"
addopts = [
    "-ra",
    "-q",
    "--strict-markers",
    "--strict-config",
    "--tb=short",
]
testpaths = ["tests"]
pythonpath = ["."]
asyncio_mode = "auto"
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]
filterwarnings = [
    "error",
    "ignore::UserWarning",
    "ignore::DeprecationWarning",
]

[tool.coverage.run]
source = ["."]
omit = [
    "*/tests/*",
    "*/alembic/*",
    "*/grpc_app/generated/*",
    "*/.venv/*",
    "*/venv/*",
    "setup.py",
]
branch = true

[tool.coverage.report]
precision = 2
show_missing = true
skip_covered = false
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "if TYPE_CHECKING:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

[tool.bandit]
exclude_dirs = ["tests", "alembic/versions", "grpc_app/generated"]
skips = ["B101", "B601"]  # B101: assert_used, B601: paramiko_calls

[tool.bandit.assert_used]
skips = ["*_test.py", "test_*.py"]

[tool.flake8]
max-line-length = 100
extend-ignore = ["E203", "E501", "W503"]
exclude = [
    ".git",
    "__pycache__",
    "build",
    "dist",
    ".venv",
    "venv",
    "alembic/versions",
    "grpc_app/generated",
]
max-complexity = 10
per-file-ignores = [
    "__init__.py:F401",
]

[build-system]
requires = ["setuptools>=45", "wheel", "setuptools_scm>=6.2"]
build-backend = "setuptools.build_meta"

[project]
name = "fastapi-forge"
version = "1.0.0"
description = "FastAPI DDD User Management System with Payment & File Storage"
readme = "README.md"
requires-python = ">=3.11"
license = {text = "MIT"}
authors = [
    {name = "Your Name", email = "your.email@example.com"}
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3.11",
    "Framework :: FastAPI",
]
dependencies = [
    "fastapi>=0.104.1",
    "uvicorn[standard]>=0.24.0",
    "sqlalchemy>=2.0.23",
    "alembic>=1.13.0",
    "pydantic[email]>=2.5.0",
    "pydantic-settings>=2.1.0",
]

[project.optional-dependencies]
dev = [
    "black>=24.3.0",
    "isort>=5.13.2",
    "flake8>=7.0.0",
    "mypy>=1.9.0",
    "pytest>=7.4.3",
    "pytest-asyncio>=0.21.1",
    "pre-commit>=3.7.0",
]

[project.urls]
Homepage = "https://github.com/yourusername/fastapi-forge"
Documentation = "https://github.com/yourusername/fastapi-forge/docs"
Repository = "https://github.com/yourusername/fastapi-forge"
